{"version":3,"sources":["webpack:///./src/views/seedstore/test/test4.vue?2e10","webpack:///src/views/seedstore/test/test4.vue","webpack:///./src/views/seedstore/test/test4.vue?9918","webpack:///./src/views/seedstore/test/test4.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","staticRenderFns","name","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,cAC7GC,EAAkB,GCiItB,GACEC,KAAFA,SCnI6W,I,YCOzWC,EAAY,eACd,EACAV,EACAQ,GACA,EACA,KACA,WACA,MAIa,aAAAE,E","file":"js/chunk-2d0f0c70.5ba4073a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"test444\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div>test444</div>\n</template>\n\n<script>\n/*  function init(){\n    var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\n    // 获取文件相关信息\n    var f1 = fso.GetFile(\"F:\\\\test\\\\test.txt\");\n    alert('文件上次修改日期:' + f1.DateLastModified);\n    var drv;\n    var s = '';\n    // 获取磁盘相关信息\n    drv = fso.GetDrive(fso.GetDriveName(\"C:\\\\\"));\n    s += 'Drive C:' + '-' + drv.VolumeName + '\\n';\n    s += 'Total Space:' + drv.TotalSize / 1024 + 'Kb' + '\\n';\n    s += 'Free Space:' + drv.FreeSpace / 1024 + 'Kb' + '\\n';\n    alert('C盘信息' + s);\n    // 操作文件夹\n    fldr = fso.GetFolder(\"F:\\\\test\");\n    alert('父文件夹名称：' + fldr + '\\n');\n    // 显示所在drive名称\n    alert(\"Contained on drive \" + fldr.Drive + \"\\n\");\n    // 判断是否为根目录\n    if (fldr.IsRootFolder){\n      alert(\"This is the root folder.\");\n    }\n    else {\n      alert(\"This folder isn't a root folder.\");\n    }\n    // 创建新文件夹\n    fso.CreateFolder (\"F:\\\\test\\\\Bogus\");\n    alert(\"Created folder F:\\\\testBogus\" + \"\\n\");\n    // 显示文件夹基础名称，不包含路径名\n    alert(\"Basename = \" + fso.GetBaseName(\"F:\\\\test\\\\bogus\") + \"\\n\");\n    // 删除创建的文件夹\n    fso.DeleteFolder (\"F:\\\\test\\\\Bogus\");\n    alert(\"Deleted folder F:\\\\test\\\\Bogus\" + \"\\n\");\n  }\n  function init2(){\n    var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\n    // 获取目录下所有文件，对于该浏览器缓存目录，仅能获取到一个文件\n    var path = 'C:\\\\Users\\\\zhang\\\\AppData\\\\Local\\\\Microsoft\\\\Windows\\\\Temporary Internet Files';\n    //path = 'F:\\\\test';\n    var fldr = fso.GetFolder(path);\n    var ff = new Enumerator(fldr.Files);\n    var s = '';\n    var fileArray = new Array();\n    var fileName = '';\n    var count = 0;\n    for(; !ff.atEnd(); ff.moveNext()){\n      fileName = ff.item().Name + '';\n      fileName = fileName.toLowerCase();\n      if(fileName.indexOf('cookie') >= 0){\n        fileName = fileName.substring(0,fileName.indexOf('.'));\n        fileName = fileName.substring(fileName.lastIndexOf('@')+1);\n        s += fileName + '\\n';\n      }\n      count++;\n    }\n    alert(count + ',' + s);\n  }\n  init2()*/\n/*const fs = require(\"fs\");\nconst path = require(\"path\");\n\n/!**\n * 读取指定路径下的所有文件路径并赋值到out中\n * @param {string} parentPath\n * @param {Array<string>} out\n *!/\nfunction readAll(parentPath, out) {\n  try{\n    let files = fs.readdirSync(parentPath);\n    files.forEach(function(item){\n      let tempPath = path.join(parentPath,item);\n      let stats = fs.statSync(tempPath);\n      if(stats.isDirectory()){\n        readAll(tempPath,out);\n      }else{\n        out.push(tempPath);\n      }\n    });\n  }catch(e){\n    console.warn(\"Path Error:\" + parentPath);\n    return out;\n  }\n}\nlet out = []\nreadAll('', out)*/\n// let _this = this;\n// let mdFile = require('mdfile').checkbox;\n//\n// for(let i=0;i<mdFile.length;i++){\n//   _this.componentArray.push( resolve => { require(['./td/' + mdFile[i]], resolve) });\n// }\n// var fs = require('fs');\n\n// var fs = window.require('fs');\n// var fs = require('fs').promises;\n/*import * as fs from 'fs'\nimport { rename } from 'fs';\nvar join = require('path').join;\n\nconsole.log(fs);\nconsole.log(rename);\nconsole.log(join);\n\nfunction getJsonFiles(jsonPath){\n  let jsonFiles = [];\n  function findJsonFile(path){\n    console.log(fs.readdirSync);\n    let files = fs.readdirSync(path);\n    files.forEach(function (item, index) {\n      let fPath = join(path,item);\n      let stat = fs.statSync(fPath);\n      if(stat.isDirectory() === true) {\n        findJsonFile(fPath);\n      }\n      if (stat.isFile() === true) {\n        jsonFiles.push(fPath);\n      }\n    });\n  }\n  findJsonFile(jsonPath);\n  console.log(jsonFiles);\n}\n\ngetJsonFiles(\"./test\");*/\n\n  export default {\n    name: \"test4\"\n  }\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test4.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./test4.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./test4.vue?vue&type=template&id=3ac7eb62&scoped=true&\"\nimport script from \"./test4.vue?vue&type=script&lang=js&\"\nexport * from \"./test4.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3ac7eb62\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}